<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaWeb学习之路（五）——MVC、过滤器、监听器</title>
      <link href="Coding/91b7f060be8d.html"/>
      <url>Coding/91b7f060be8d.html</url>
      
        <content type="html"><![CDATA[<h2 id="MVC三层架构"><a href="#MVC三层架构" class="headerlink" title="MVC三层架构"></a>MVC三层架构</h2><ul><li><p>Model 模型</p><ul><li><p>业务处理：业务逻辑（Service）</p></li><li><p>数据持久层：CRUD(Dao)</p></li></ul></li><li><p>View 视图</p><ul><li>展示数据</li><li>提供链接发起Servl请求</li></ul></li><li><p>Controller 控制器</p><ul><li>接收用户的请求</li><li>交给业务层处理对应的代码</li><li>控制视图的转跳</li></ul></li></ul><p><strong>Servlet专注于处理请求和控制视图跳转，JSP专注于显示数据</strong></p><h2 id="过滤器（重点）"><a href="#过滤器（重点）" class="headerlink" title="过滤器（重点）"></a>过滤器（重点）</h2><p><strong>用来过滤网站的数据</strong></p><h3 id="开发流程"><a href="#开发流程" class="headerlink" title="开发流程"></a>开发流程</h3><ul><li>导包</li><li>编写过滤器编写</li><li>修改web.xml</li></ul><p>编码错误</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        response.getWriter().write(<span class="string">&quot;你好呀，世界&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210502121624540.png" alt="image-20210502121624540"></p><p>添加过滤器</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>filter1<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>top.huii.filter.Filter1<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>filter1<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/fi/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.huii.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.*;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Filter1</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"><span class="comment">//    初始化</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig filterConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain)</span> <span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        servletRequest.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        servletResponse.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        servletResponse.setContentType(<span class="string">&quot;text/html;charset=UTF-8&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;执行前&quot;</span>);</span><br><span class="line">        filterChain.doFilter(servletRequest, servletResponse);  <span class="comment">//让请求继续走，交给下一个过滤器</span></span><br><span class="line">        System.out.println(<span class="string">&quot;执行后&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    销毁</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210502122340544.png" alt="image-20210502122340544"></p><p>可用作权限拦截等功能。</p><h2 id="监听器"><a href="#监听器" class="headerlink" title="监听器"></a>监听器</h2><p><strong>实现监听器的接口</strong></p><p>web.xml配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>top.huii.listener.Listener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.huii.listener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSessionEvent;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSessionListener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Listener</span> <span class="keyword">implements</span> <span class="title">HttpSessionListener</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line"><span class="comment">//    一旦创建session，就触发</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionCreated</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> </span>&#123;</span><br><span class="line">        HttpSession session = httpSessionEvent.getSession();</span><br><span class="line">        Integer count = (Integer) session.getAttribute(<span class="string">&quot;count&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="keyword">null</span>)&#123;</span><br><span class="line">            count = <span class="keyword">new</span> Integer(<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">int</span> c = count.intValue();</span><br><span class="line">            count = <span class="keyword">new</span> Integer(c + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(count);</span><br><span class="line">        session.setAttribute(<span class="string">&quot;count&quot;</span>, count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">sessionDestroyed</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Web </tag>
            
            <tag> Tomcat </tag>
            
            <tag> IDEA </tag>
            
            <tag> 过滤器 </tag>
            
            <tag> 监听器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb学习之路（四）——JSP</title>
      <link href="Coding/f9da2203da49.html"/>
      <url>Coding/f9da2203da49.html</url>
      
        <content type="html"><![CDATA[<h2 id="初识JSP"><a href="#初识JSP" class="headerlink" title="初识JSP"></a>初识JSP</h2><h3 id="什么是Java-Server-Pages"><a href="#什么是Java-Server-Pages" class="headerlink" title="什么是Java Server Pages?"></a>什么是Java Server Pages?</h3><p><a href="https://www.runoob.com/jsp/jsp-intro.html">JSP 简介 | 菜鸟教程 (runoob.com)</a></p><p>JSP全称Java Server Pages，是一种动态网页开发技术。它使用JSP标签在HTML网页中插入Java代码。标签通常以&lt;%开头以%&gt;结束。</p><p>JSP是一种Java servlet，主要用于实现Java web应用程序的用户界面部分。网页开发者们通过结合HTML代码、XHTML代码、XML元素以及嵌入JSP操作和命令来编写JSP。</p><p>JSP通过网页表单获取用户输入数据、访问数据库及其他数据源，然后动态地创建网页。</p><p>JSP标签有多种功能，比如访问数据库、记录用户选择信息、访问JavaBeans组件等，还可以在不同的网页中传递控制信息和共享信息。</p><h3 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h3><p>其本质还是servlet</p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210502001932990.png" alt="image-20210502001932990"></p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210502002152260.png" alt="image-20210502002152260"></p><ul><li><p>java代码会被原封不动地输出，HTML代码会被转化：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">out.write(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;html&gt;\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;  &lt;head&gt;\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;    &lt;title&gt;$Title$&lt;/title&gt;\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;  &lt;/head&gt;\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;  &lt;body&gt;\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;  $END$\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;  &lt;/body&gt;\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;/html&gt;\n&quot;</span>);</span><br></pre></td></tr></table></figure></li></ul><h2 id="JSP的基础语法"><a href="#JSP的基础语法" class="headerlink" title="JSP的基础语法"></a>JSP的基础语法</h2><ul><li>java语法都支持，还拥有一些扩充语法</li></ul><h3 id="JSP表达式"><a href="#JSP表达式" class="headerlink" title="JSP表达式"></a>JSP表达式</h3><ul><li>作用：将程序的输出，输出到客户端</li><li>语法： <code>&lt;%= 表达式%&gt;</code></li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= <span class="keyword">new</span> java.util.Date()%&gt;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210502004116581.png" alt="image-20210502004116581"></p><ul><li>```jsp<br>&lt;%<pre><code>int sum = 0;for (int i = 0; i &lt; 100; i++) &#123;    sum += i;&#125;out.println(&quot;&lt;h1&gt;&quot;+sum+&quot;&lt;/h1&gt;&quot;);</code></pre>%&gt;<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  ![image-20210502004240605](..&#x2F;img&#x2F;image-20210502004240605.png)</span><br><span class="line"></span><br><span class="line">- </span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;jsp</span><br><span class="line">&lt;%</span><br><span class="line">    for (int i &#x3D; 0; i &lt; 100; i++) &#123;</span><br><span class="line">        %&gt;</span><br><span class="line">&lt;h1&gt;Hello World &lt;%&#x3D;i%&gt;&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure></li></ul><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210502004044714.png" alt="image-20210502004044714"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;html&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;head&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;    &lt;title&gt;Title&lt;/title&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;/head&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;body&gt;\r\n&quot;</span>);</span><br><span class="line">out.print( <span class="keyword">new</span> java.util.Date());</span><br><span class="line">out.write(<span class="string">&#x27;\r&#x27;</span>);</span><br><span class="line">out.write(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">    sum += i;</span><br><span class="line">&#125;</span><br><span class="line">out.println(<span class="string">&quot;&lt;h1&gt;&quot;</span>+sum+<span class="string">&quot;&lt;/h1&gt;&quot;</span>);</span><br><span class="line"></span><br><span class="line">out.write(<span class="string">&#x27;\r&#x27;</span>);</span><br><span class="line">out.write(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line"></span><br><span class="line">    out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">    out.write(<span class="string">&quot;&lt;h1&gt;Hello World &quot;</span>);</span><br><span class="line">    out.print(i);</span><br><span class="line">    out.write(<span class="string">&quot;&lt;/h1&gt;\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">out.write(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;/body&gt;\r\n&quot;</span>);</span><br><span class="line">out.write(<span class="string">&quot;&lt;/html&gt;\r\n&quot;</span>);</span><br></pre></td></tr></table></figure><h3 id="JSP声明"><a href="#JSP声明" class="headerlink" title="JSP声明"></a>JSP声明</h3><p>jsp声明会被编译到java类中，其他的会被生成到jspService方法中</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%!</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Loading Servlet&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> globalVar = <span class="number">0</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">kkk</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;进入了kkk方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h3 id="EL表达式"><a href="#EL表达式" class="headerlink" title="EL表达式"></a>EL表达式</h3><p><a href="https://blog.csdn.net/w_linux/article/details/79850223">EL表达式详解_浅然的专栏-CSDN博客_el表达式</a></p><p><code>$&#123;&#125;</code>等价于<code>&lt;%=%&gt;</code></p><ul><li><p>如果EL表达式无效，需要在头部配置</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> isELIgnored=<span class="string">&quot;false&quot;</span> %&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--注释--%&gt;</span><br></pre></td></tr></table></figure><h3 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h3><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> 指令 %&gt;</span><br></pre></td></tr></table></figure><h4 id="错误页面配置"><a href="#错误页面配置" class="headerlink" title="错误页面配置"></a>错误页面配置</h4><ul><li>直接在页面内配置</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@page</span> errorPage=<span class="string">&quot;error/errorPage.jsp&quot;</span> %&gt;</span><br></pre></td></tr></table></figure><ul><li><p>web.xml配置</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>404<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">location</span>&gt;</span>/error/errorPage.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">error-code</span>&gt;</span>500<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">location</span>&gt;</span>/error/errorPage.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="包含页面"><a href="#包含页面" class="headerlink" title="包含页面"></a>包含页面</h4><ul><li>会将页面合二为一</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;index.jsp&quot;</span> %&gt;</span><br></pre></td></tr></table></figure><ul><li>拼接页面，本质还是几个（一般用这个，灵活性更高）</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:include page=<span class="string">&quot;index.jsp&quot;</span>/&gt;</span><br></pre></td></tr></table></figure><h2 id="九大内置对象"><a href="#九大内置对象" class="headerlink" title="九大内置对象"></a>九大内置对象</h2><ul><li>pageContext 存东西</li><li>Request 存东西</li><li>Response</li><li>Session 存东西</li><li>Application[ServletContext] 存东西</li><li>config[ServletConfig] </li><li>out 输出内容</li><li>page 几乎不用</li><li>exception</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    pageContext.setAttribute(<span class="string">&quot;name1&quot;</span>, <span class="string">&quot;HUII&quot;</span>);<span class="comment">// 保存的数据只在一个页面中有效</span></span><br><span class="line">    request.setAttribute(<span class="string">&quot;name2&quot;</span>, <span class="string">&quot;HUII&quot;</span>);<span class="comment">// 只在一次请求中有效，请求转发会携带这个数据</span></span><br><span class="line">    session.setAttribute(<span class="string">&quot;name3&quot;</span>, <span class="string">&quot;HUII&quot;</span>);<span class="comment">// 只在一次会话中有效，从打开浏览器到关闭浏览器</span></span><br><span class="line">    application.setAttribute(<span class="string">&quot;name4&quot;</span>, <span class="string">&quot;HUII&quot;</span>);<span class="comment">// 只在服务器中有效，从打开服务器到关闭服务器</span></span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>脚本片段中的代码会被原封不动地生成到JSP.java中</p><p><strong>要求：Java语法正确</strong></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    String name1 = (String) pageContext.findAttribute(<span class="string">&quot;name1&quot;</span>);</span><br><span class="line">    String name2 = (String) pageContext.findAttribute(<span class="string">&quot;name2&quot;</span>);</span><br><span class="line">    String name3 = (String) pageContext.findAttribute(<span class="string">&quot;name3&quot;</span>);</span><br><span class="line">    String name4 = (String) pageContext.findAttribute(<span class="string">&quot;name4&quot;</span>);</span><br><span class="line">    String name5 = (String) pageContext.findAttribute(<span class="string">&quot;name5&quot;</span>);<span class="comment">// 不存在</span></span><br><span class="line">%&gt;</span><br><span class="line">&lt;h1&gt;取出的值&lt;/h1&gt;</span><br><span class="line">&lt;h3&gt;$&#123;name1&#125;&lt;/h3&gt;</span><br><span class="line">&lt;h3&gt;$&#123;name2&#125;&lt;/h3&gt;</span><br><span class="line">&lt;h3&gt;$&#123;name3&#125;&lt;/h3&gt;</span><br><span class="line">&lt;h3&gt;$&#123;name4&#125;&lt;/h3&gt;</span><br><span class="line">&lt;h3&gt;$&#123;name5&#125;&lt;/h3&gt;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210502105430443.png" alt="image-20210502105430443"></p><ul><li><p>如果不使用EL表达式，而是使用<code>&lt;h3&gt;&lt;%=name5%&gt;&lt;/h3&gt;</code>,则会出现：</p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210502105618774.png" alt="image-20210502105618774"></p></li><li><p>页面转发</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    pageContext.forward(<span class="string">&quot;/success.jsp&quot;</span>);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="JSP标签、JSTL标签、EL表达式"><a href="#JSP标签、JSTL标签、EL表达式" class="headerlink" title="JSP标签、JSTL标签、EL表达式"></a>JSP标签、JSTL标签、EL表达式</h2><h3 id="EL表达式-1"><a href="#EL表达式-1" class="headerlink" title="EL表达式"></a>EL表达式</h3><ul><li>获取数据</li><li>执行运算</li><li>获取web开发的常用对象</li></ul><h3 id="JSP标签【几乎不用】"><a href="#JSP标签【几乎不用】" class="headerlink" title="JSP标签【几乎不用】"></a>JSP标签【几乎不用】</h3><ul><li><p>include</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="meta">@include</span> file=<span class="string">&quot;index.jsp&quot;</span> %&gt;</span><br></pre></td></tr></table></figure></li><li><p>转发、传值</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;jsp:forward page=<span class="string">&quot;index.jsp&quot;</span>&gt;</span><br><span class="line">    &lt;jsp:param name=<span class="string">&quot;value&quot;</span> value=<span class="string">&quot;valvalue&quot;</span>/&gt;</span><br><span class="line">&lt;/jsp:forward&gt;</span><br></pre></td></tr></table></figure><p>对应页面取值</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%=request.getParameter(<span class="string">&quot;value&quot;</span>)%&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="JSTL表达式"><a href="#JSTL表达式" class="headerlink" title="JSTL表达式"></a>JSTL表达式</h3><ul><li><p><a href="https://www.runoob.com/jsp/jsp-jstl.html">JSP 标准标签库（JSTL） | 菜鸟教程 (runoob.com)</a></p><p>JSP标准标签库（JSTL）是一个JSP标签集合，它封装了JSP应用的通用核心功能。</p><p>JSTL支持通用的、结构化的任务，比如迭代，条件判断，XML文档操作，国际化标签，SQL标签。 除了这些，它还提供了一个框架来使用集成JSTL的自定义标签。</p><ul><li><strong>核心标签</strong></li><li><strong>格式化标签</strong></li><li><strong>SQL 标签</strong></li><li><strong>XML 标签</strong></li><li><strong>JSTL 函数</strong></li></ul><p>弥补了html的不足</p></li><li><p>引入jstl核心标签库</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210502111754085.png" alt="image-20210502111754085"></p><p>常用：<code>c:forEach</code></p></li></ul><h2 id="JavaBean"><a href="#JavaBean" class="headerlink" title="JavaBean"></a>JavaBean</h2><p>实体类</p><p>JavaBean有特定的写法</p><ul><li>必须有一个无参构造</li><li>属性必须私有化</li><li>必须有对应的get/set方法</li></ul><p>一般用来和数据库的字段做映射 ORM</p><p>ORM：对象关系映射</p><ul><li>表—&gt;类</li><li>字段—&gt;属性</li><li>行记录—对象、</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> top.huii.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">People</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">People</span><span class="params">(<span class="keyword">int</span> id, String name, <span class="keyword">int</span> age, String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAddress</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAddress</span><span class="params">(String address)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;People&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;id=&quot;</span> + id +</span><br><span class="line">                <span class="string">&quot;, name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, age=&quot;</span> + age +</span><br><span class="line">                <span class="string">&quot;, address=&#x27;&quot;</span> + address + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Web </tag>
            
            <tag> Tomcat </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb学习之路（三）——基本请求处理</title>
      <link href="Coding/c8a91ed2f229.html"/>
      <url>Coding/c8a91ed2f229.html</url>
      
        <content type="html"><![CDATA[<h2 id="接收参数"><a href="#接收参数" class="headerlink" title="接收参数"></a>接收参数</h2><ul><li><p>接收单个参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String username = request.getParameter(<span class="string">&quot;username&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>接收多个参数【前端使用checkbox等，产生数组】</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">String[] hobbies = request.getParameterValues(<span class="string">&quot;hobby&quot;</span>);</span><br></pre></td></tr></table></figure></li></ul><h2 id="设置请求转发"><a href="#设置请求转发" class="headerlink" title="设置请求转发"></a>设置请求转发</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.getRequestDispatcher(<span class="string">&quot;success.jsp&quot;</span>).forward(request, response);</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501221142975.png" alt="image-20210501221142975"></p><ul><li><p>参考：<a href="https://blog.csdn.net/hju22/article/details/86734703">重定向</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.sendRedirect(<span class="string">&quot;/hello/home.html&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p><strong>请求转发是使用request，而重定向使用response</strong>。</p></li><li><p>请求转发状态码：302，重定向状态码：307。</p></li><li><p>请求转发url不会发生改变，重定向url会改变。</p></li></ul><h2 id="小Tip"><a href="#小Tip" class="headerlink" title="小Tip"></a>小Tip</h2><ul><li><p>处理中文显示乱码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">request.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">response.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">response.setContentType(<span class="string">&quot;text/html;charset-utf-8&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p><a href="https://blog.csdn.net/u013084858/article/details/82768086">java对URL进行编码和解码_平静的大海-CSDN博客_java url编码</a></p></li></ul><h2 id="ConText"><a href="#ConText" class="headerlink" title="ConText"></a>ConText</h2><p><a href="https://blog.csdn.net/dawiebazhanlang/article/details/79642549">java web 中关于ConText的简介_码上人生的博客-CSDN博客</a></p><p><a href="https://www.jianshu.com/p/31d27181d542">JavaWeb–ServletContext - 简书 (jianshu.com)</a></p><h2 id="Cookie和Session"><a href="#Cookie和Session" class="headerlink" title="Cookie和Session"></a>Cookie和Session</h2><ul><li>区别：<a href="https://www.cnblogs.com/l199616j/p/11195667.html">cookie和session的详解与区别 - 测试开发喵 - 博客园 (cnblogs.com)</a></li><li>cookie:信息在浏览器保存；session：信息在服务器保存</li></ul><h3 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h3><ul><li><p>Cookie:请求中获得到cookie，服务器响应。</p></li><li><p>一个web站点最多存放<strong>20</strong>个cookie，大小限制<strong>4</strong>kb，<strong>300</strong>个cookie浏览器上限。</p></li><li><p>```java<br>Cookie[] cookies = request.getCookies();<br>if (cookies != null){</p><pre><code>for (Cookie cookie : cookies) &#123;    if (cookie.getName().equals(&quot;lastLoginTime&quot;)) &#123;        long l = Long.parseLong(cookie.getValue());        Date date = new Date(l);        writer.write(&quot;现在是&quot;+date.toLocaleString());    &#125;&#125;</code></pre><p>} else {</p><pre><code>writer.write(&quot;第一次访问&quot;);</code></pre><p>}<br>Cookie cookie = new Cookie(“lastLoginTime”, System.currentTimeMillis()+””);<br>cookie.setMaxAge(24<em>60</em>60);<br>response.addCookie(cookie);</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- &#96;&#96;&#96;</span><br><span class="line">  Set-Cookie: lastLoginTime&#x3D;1619883448706; Max-Age&#x3D;86400; Expires&#x3D;Sun, 02-May-2021 15:37:28 GMT</span><br></pre></td></tr></table></figure></li><li><p>删除cookie：设置一个同名cookie，有效期设置为0。</p></li></ul><h3 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h3><ul><li><p>服务器会为每位用户（浏览器）创建一个Session对象。一个Session独占一个浏览器。</p></li><li><p>session可以存储对象。</p></li><li><p>```java<br>HttpSession session = request.getSession();<br>session.setAttribute(“name”, “HUII”);<br>String sessionId = session.getId();<br>if (session.isNew()){</p><pre><code>response.getWriter().write(&quot;创建成功&quot;+sessionId);</code></pre><p>} else {</p><pre><code>response.getWriter().write(&quot;已存在&quot;+sessionId);</code></pre><p>}</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- &#96;&#96;&#96;</span><br><span class="line">  Set-Cookie: JSESSIONID&#x3D;C222FB743499A0BA36C8B737CED42FFB; Path&#x3D;&#x2F;javaweb3_war; HttpOnly</span><br></pre></td></tr></table></figure></li><li><p>删除某个</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.removeAttribute(<span class="string">&quot;name&quot;</span>);</span><br></pre></td></tr></table></figure></li><li><p>手动注销，清除所有内容（同时生成新的）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.invalidate();</span><br></pre></td></tr></table></figure></li><li><pre><code class="xml">&lt;web-app&gt;    &lt;session-config&gt;        &lt;!--失效时间，以分钟为单位--&gt;        &lt;session-timeout&gt;15&lt;/session-timeout&gt;    &lt;/session-config&gt;&lt;/web-app&gt;</code></pre></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Web </tag>
            
            <tag> Tomcat </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb学习之路（二）——环境配置与项目创建</title>
      <link href="Coding/b5857fdaffb8.html"/>
      <url>Coding/b5857fdaffb8.html</url>
      
        <content type="html"><![CDATA[<h2 id="学习开发环境"><a href="#学习开发环境" class="headerlink" title="学习开发环境"></a>学习开发环境</h2><ul><li><p>使用IDE : IDEA</p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501122600387.png" alt="image-20210501122600387"></p><p>使用学生身份可免费获得许可证</p></li><li><p>Tomcat 9</p></li><li><p>Maven 3.8</p></li></ul><h2 id="项目基本环境配置"><a href="#项目基本环境配置" class="headerlink" title="项目基本环境配置"></a>项目基本环境配置</h2><h3 id="Java配置"><a href="#Java配置" class="headerlink" title="Java配置"></a>Java配置</h3><p>略过。。</p><h3 id="Maven配置"><a href="#Maven配置" class="headerlink" title="Maven配置"></a>Maven配置</h3><ul><li>从官网下载压缩包，并解压到某个文件夹中。创建<code>maven-repo</code>文件夹作为本地参考存放组件。</li></ul><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501123921278.png" alt="image-20210501123921278"></p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501123817964.png" alt="image-20210501123817964"></p><ul><li><p>系统环境变量配置</p><p>M2_HOME和Path</p></li></ul><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501124314588.png" alt="image-20210501124314588"></p><h3 id="Tomcat配置"><a href="#Tomcat配置" class="headerlink" title="Tomcat配置"></a>Tomcat配置</h3><ul><li><p>下载</p></li><li><p>建议将conf/logging.properties 下部分编码修改为GBK</p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501124602582.png" alt="image-20210501124602582"></p></li></ul><h2 id="使用IDEA创建项目"><a href="#使用IDEA创建项目" class="headerlink" title="使用IDEA创建项目"></a>使用IDEA创建项目</h2><ul><li>从原型创建</li></ul><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501123142077.png" alt="image-20210501123142077"></p><ul><li>配置项目信息</li></ul><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501123309805.png" alt="image-20210501123309805"></p><ul><li>Maven路径配置</li></ul><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501123442362.png" alt="image-20210501123442362"></p><ul><li><p>完成</p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501124807711.png" alt="image-20210501124807711"></p></li><li><p>设置Tomcat服务器</p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501125013722.png" alt="image-20210501125013722"></p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501125242109.png" alt="image-20210501125242109"></p></li><li><p>调整至规范目录结构</p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501130029893.png" alt="image-20210501130029893"></p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501125834777.png" alt="image-20210501125834777"></p></li><li><p>servlet 配置</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Servlet1</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span></span>&#123;</span><br><span class="line">    <span class="comment">// 输入要继承的内容后，点击提示，选择添加Maven依赖项</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501131202357.png" alt="image-20210501131202357"></p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501131354267.png" alt="image-20210501131354267"></p></li><li><p>之后新建选择Servlet即可</p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501131442924.png" alt="image-20210501131442924"></p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501131606939.png" alt="image-20210501131606939"></p><p>它会帮助我们自动填写<code>&lt;servlet&gt;</code>标签,我们只要添加<code>&lt;servlet-mapping&gt;</code>标签内容即可。</p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501131723052.png" alt="image-20210501131723052"></p></li><li><p>即重写get、post等方法了</p><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210501131840514.png" alt="image-20210501131840514"></p></li></ul>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Web </tag>
            
            <tag> Tomcat </tag>
            
            <tag> IDEA </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaWeb学习之路（一）——动机与准备</title>
      <link href="Coding/7e3295190274.html"/>
      <url>Coding/7e3295190274.html</url>
      
        <content type="html"><![CDATA[<h2 id="前期知识储备"><a href="#前期知识储备" class="headerlink" title="前期知识储备"></a>前期知识储备</h2><p>目前我已经点亮以下技能点</p><ul><li>前端html、css、js，以及jquery、vue框架的基本使用。</li><li>熟练使用python语言，掌握或了解c语言、Java等流行语言。</li><li>掌握基本数据结构与算法。</li><li>使用MySQL数据库。</li><li>熟悉web前后端交互，request与response。</li><li>用ThinkPHP、Flask、Django开发过几个中小型项目。</li></ul><h2 id="为什么想要学习JavaWeb"><a href="#为什么想要学习JavaWeb" class="headerlink" title="为什么想要学习JavaWeb"></a>为什么想要学习JavaWeb</h2><p>经过这一年多的web开发的学习，我经历了ThinkPHP-&gt;Flask-&gt;Django三个历程，前半阶段主力语言是php，后半阶段，也就是目前，我的主力语言是Python。</p><p>php，怎么说呢，刚开始，我觉得它跟C语言挺像的，后来学习了Java后发现，我用的ThinkPHP框架内的结构跟Java更像。但是呢，这个<code>$</code>是在有点令人讨厌，之后一次项目的数组操作不出来（是我太菜了），让我下定决心废弃它。</p><p>python，目前是我最喜爱的语言。我可以很快速地完成我想要的功能。但是，鱼与熊掌不可兼得，开发效率的提升，伴随的是运行效率的严重下降。它的运行效率实在是不行 ！ </p><p>据我了解，目前市场上主流的web后端语言是Java，虽然我有点不太喜欢Java（感觉太啰嗦了），但是有了比较好用的IDE，问题好像不是太大。并且目前有很多成熟的解决方案，学习起来应该也比较easy。</p><h2 id="计划如何学习"><a href="#计划如何学习" class="headerlink" title="计划如何学习"></a>计划如何学习</h2><p>目前学习主战地：B站</p><p>我原本是计划看尚硅谷或者其他培训班的课程。但是我前几天发现了一个讲课效果特别好的up主:<em><a href="https://space.bilibili.com/95256449/channel/detail?cid=146244">遇见狂神说的个人空间 - 哔哩哔哩 ( ゜- ゜)つロ 乾杯~ Bilibili</a></em></p><p><img src= "/img/loading.gif" data-lazy-src="../img/83bb511365da513c55aa3d1958524f3b7db40684.jpg" alt="img"></p><p>他的课感觉很不错：</p><p><img src= "/img/loading.gif" data-lazy-src="../img/75b12ea49e8d7cc6cd2d0ada331f9851fe5ad27c.jpg" alt="75b12ea49e8d7cc6cd2d0ada331f9851fe5ad27c.jpg@380w_240h_100Q_1c.webp (380×240) (hdslb.com)"></p><p>所以计划跟着他看完JavaWeb内容，并继续学习其他知识。</p><h2 id="学习路线"><a href="#学习路线" class="headerlink" title="学习路线"></a>学习路线</h2><p><img src= "/img/loading.gif" data-lazy-src="../img/image-20210503104856735.png" alt="image-20210503104856735"></p>]]></content>
      
      
      <categories>
          
          <category> Coding </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
